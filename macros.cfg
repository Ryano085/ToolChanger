#####################################################################
#   Macros
#####################################################################
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:            # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
        {% set temp_bed = params.BED|int %}     
        {% set temp_hotend = params.HOTEND|int %}
        {% set target_chamber = params.CHAMBER|default("40")|int %}
        {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
        {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    M104 S150
    M190 S{temp_bed}   
    G4 P30000 #wait for 30 secs.
    BED_MESH_CLEAR
    G32                            ; home all axes
    G90                            ; absolute positioning
    M109 S{temp_hotend}
    CLEAN_NOZZLE
    NEOPIXEL_DISPLAY LED="elec_leds" TYPE=print_percent MODE=progress
    # Gets ready to print by doing a purge line and updating the SB-leds
    SET_DISPLAY_TEXT MSG="Printer goes brr"                                           # Displays info
    STATUS_PRINTING                                                                   # Sets SB-leds to printing-mode
    G0 X{x_wait - 50} Y4 F12000                                                       # Moves to starting point
    G0 Z0.4                                                                           # Raises Z to 0.4
    G91                                                                               # Incremental positioning 
    G1 X100 E20 F1000                                                                 # Purge line
    G90                                                                               # Absolut position
    SKEW_PROFILE LOAD=calilantern_skew_profile		# Vector3d Calilantern

[gcode_macro PARK]
gcode:
        {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    CLEAN_NOZZLE
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    BED_MESH_CALIBRATE ADAPTIVE=1
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
    G28 Z

#[gcode_macro _CQGL]
#gcode:
#   STATUS_LEVELING
#    {% if printer.quad_gantry_level.applied == False %}
#    {% if "xyz" not in printer.toolhead.homed_axes %}
#     G28 ; home if not already homed
#    {% endif %}
#    QUAD_GANTRY_LEVEL
#    {% endif %}
#    STATUS_READY
#    G28 Z  

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 155
variable_start_y: 350
variable_start_z: 6.75
variable_wipe_dist: -50
variable_wipe_qty: 7
variable_wipe_spd: 350
variable_raise_distance: 10

gcode:
  STATUS_CLEANING
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 G1 Z12
 
 G90 ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}
  STATUS_READY
    

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    SET_SKEW CLEAR=1	
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 6} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0